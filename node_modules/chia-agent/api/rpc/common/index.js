"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.healthz = exports.healthz_command = exports.get_routes = exports.get_routes_command = exports.stop_node = exports.stop_node_command = exports.close_connection = exports.close_connection_command = exports.open_connection = exports.open_connection_command = exports.get_connections = exports.get_connections_command = exports.chia_common_service = void 0;
exports.chia_common_service = "";
exports.get_connections_command = "get_connections";
function get_connections(agent, params) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_common_service, exports.get_connections_command, params);
    });
}
exports.get_connections = get_connections;
exports.open_connection_command = "open_connection";
function open_connection(agent, params) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_common_service, exports.open_connection_command, params);
    });
}
exports.open_connection = open_connection;
exports.close_connection_command = "close_connection";
function close_connection(agent, params) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_common_service, exports.close_connection_command, params);
    });
}
exports.close_connection = close_connection;
exports.stop_node_command = "stop_node";
function stop_node(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_common_service, exports.stop_node_command);
    });
}
exports.stop_node = stop_node;
exports.get_routes_command = "get_routes";
function get_routes(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_common_service, exports.get_routes_command);
    });
}
exports.get_routes = get_routes;
exports.healthz_command = "healthz";
function healthz(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_common_service, exports.healthz_command);
    });
}
exports.healthz = healthz;
