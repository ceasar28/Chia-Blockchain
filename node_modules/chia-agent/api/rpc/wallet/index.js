"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.get_transaction_count_command = exports.send_transaction_multi = exports.send_transaction_multi_command = exports.send_transaction = exports.send_transaction_command = exports.get_next_address = exports.get_next_address_command = exports.get_transactions = exports.get_transactions_command = exports.get_transaction = exports.get_transaction_command = exports.get_wallet_balance = exports.get_wallet_balance_command = exports.create_new_wallet = exports.create_new_wallet_command = exports.get_wallets = exports.get_wallets_command = exports.get_network_info_of_wallet = exports.get_network_info_command_of_wallet = exports.get_initial_freeze_period_of_wallet = exports.get_initial_freeze_period_command_of_wallet = exports.farm_block = exports.farm_block_command = exports.push_transactions = exports.push_transactions_command = exports.push_tx = exports.push_tx_command = exports.get_height_info = exports.get_height_info_command = exports.get_sync_status = exports.get_sync_status_command = exports.delete_all_keys = exports.delete_all_keys_command = exports.check_delete_key = exports.check_delete_key_command = exports.delete_key = exports.delete_key_command = exports.add_key = exports.add_key_command = exports.generate_mnemonic = exports.generate_mnemonic_command = exports.get_private_key = exports.get_private_key_command = exports.get_public_keys = exports.get_public_keys_command = exports.get_logged_in_fingerprint = exports.get_logged_in_fingerprint_command = exports.log_in = exports.log_in_command = exports.chia_wallet_service = void 0;
exports.get_offers_count_command = exports.get_all_offers = exports.get_all_offers_command = exports.get_offer = exports.get_offer_command = exports.take_offer = exports.take_offer_command = exports.check_offer_validity = exports.check_offer_validity_command = exports.get_offer_summary = exports.get_offer_summary_command = exports.create_offer_for_ids = exports.create_offer_for_ids_command = exports.cat_get_asset_id = exports.cat_get_asset_id_command = exports.cat_spend = exports.cat_spend_command = exports.get_stray_cats = exports.get_stray_cats_command = exports.cat_get_name = exports.cat_get_name_command = exports.cat_asset_id_to_name = exports.cat_asset_id_to_name_command = exports.cat_set_name = exports.cat_set_name_command = exports.get_cat_list = exports.get_cat_list_command = exports.sign_message_by_id = exports.sign_message_by_id_command = exports.sign_message_by_address = exports.sign_message_by_address_command = exports.send_notification = exports.send_notification_command = exports.delete_notifications = exports.delete_notifications_command = exports.get_notifications = exports.get_notifications_command = exports.extend_derivation_index = exports.extend_derivation_index_command = exports.get_current_derivation_index = exports.get_current_derivation_index_command = exports.select_coins = exports.select_coins_command = exports.delete_unconfirmed_transactions = exports.delete_unconfirmed_transactions_command = exports.create_signed_transaction = exports.create_signed_transaction_command = exports.get_farmed_amount = exports.get_farmed_amount_command = exports.get_transaction_count = void 0;
exports.nft_transfer_nft_command = exports.nft_set_nft_status = exports.nft_set_nft_status_command = exports.nft_get_wallets_with_dids = exports.nft_get_wallets_with_dids_command = exports.nft_get_wallet_did = exports.nft_get_wallet_did_command = exports.nft_get_by_did = exports.nft_get_by_did_command = exports.nft_set_nft_did = exports.nft_set_nft_did_command = exports.nft_get_nfts = exports.nft_get_nfts_command = exports.nft_mint_nft = exports.nft_mint_nft_command = exports.did_transfer_did = exports.did_transfer_did_command = exports.did_create_backup_file = exports.did_create_backup_file_command = exports.did_get_current_coin_info = exports.did_get_current_coin_info_command = exports.did_get_information_needed_for_recovery = exports.did_get_information_needed_for_recovery_command = exports.did_create_attest = exports.did_create_attest_command = exports.did_get_metadata = exports.did_get_metadata_command = exports.did_get_recovery_list = exports.did_get_recovery_list_command = exports.did_recovery_spend = exports.did_recovery_spend_command = exports.did_get_did = exports.did_get_did_command = exports.did_get_pubkey = exports.did_get_pubkey_command = exports.did_spend = exports.did_spend_command = exports.did_update_metadata = exports.did_update_metadata_command = exports.did_update_recovery_ids = exports.did_update_recovery_ids_command = exports.did_get_wallet_name = exports.did_get_wallet_name_command = exports.did_set_wallet_name = exports.did_set_wallet_name_command = exports.cancel_offers = exports.cancel_offers_command = exports.cancel_offer = exports.cancel_offer_command = exports.get_offers_count = void 0;
exports.dl_delete_mirror = exports.dl_delete_mirror_command = exports.dl_new_mirror = exports.dl_new_mirror_command = exports.dl_get_mirrors = exports.dl_get_mirrors_command = exports.dl_owned_singletons = exports.dl_owned_singletons_command = exports.dl_history = exports.dl_history_command = exports.dl_update_multiple = exports.dl_update_multiple_command = exports.dl_update_root = exports.dl_update_root_command = exports.dl_singletons_by_root = exports.dl_singletons_by_root_command = exports.dl_latest_singleton = exports.dl_latest_singleton_command = exports.dl_stop_tracking = exports.dl_stop_tracking_command = exports.dl_track_new = exports.dl_track_new_command = exports.create_new_dl = exports.create_new_dl_command = exports.pw_status = exports.pw_status_command = exports.pw_absorb_rewards = exports.pw_absorb_rewards_command = exports.pw_self_pool = exports.pw_self_pool_command = exports.pw_join_pool = exports.pw_join_pool_command = exports.add_rate_limited_funds = exports.add_rate_limited_funds_command = exports.send_clawback_transaction = exports.send_clawback_transaction_command = exports.rl_set_user_info = exports.rl_set_user_info_command = exports.nft_mint_bulk = exports.nft_mint_bulk_command = exports.nft_calculate_royalties = exports.nft_calculate_royalties_command = exports.nft_add_uri = exports.nft_add_uri_command = exports.nft_get_info = exports.nft_get_info_command = exports.nft_transfer_nft = void 0;
exports.chia_wallet_service = "chia_wallet";
// # Key management
exports.log_in_command = "log_in";
function log_in(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.log_in_command, data);
    });
}
exports.log_in = log_in;
exports.get_logged_in_fingerprint_command = "get_logged_in_fingerprint";
function get_logged_in_fingerprint(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_logged_in_fingerprint_command);
    });
}
exports.get_logged_in_fingerprint = get_logged_in_fingerprint;
exports.get_public_keys_command = "get_public_keys";
function get_public_keys(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_public_keys_command);
    });
}
exports.get_public_keys = get_public_keys;
exports.get_private_key_command = "get_private_key";
function get_private_key(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_private_key_command, data);
    });
}
exports.get_private_key = get_private_key;
exports.generate_mnemonic_command = "generate_mnemonic";
function generate_mnemonic(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.generate_mnemonic_command);
    });
}
exports.generate_mnemonic = generate_mnemonic;
exports.add_key_command = "add_key";
function add_key(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.add_key_command, data);
    });
}
exports.add_key = add_key;
exports.delete_key_command = "delete_key";
function delete_key(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.delete_key_command, data);
    });
}
exports.delete_key = delete_key;
exports.check_delete_key_command = "check_delete_key";
function check_delete_key(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.check_delete_key_command, data);
    });
}
exports.check_delete_key = check_delete_key;
exports.delete_all_keys_command = "delete_all_keys";
function delete_all_keys(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.delete_all_keys_command);
    });
}
exports.delete_all_keys = delete_all_keys;
// # Wallet node
exports.get_sync_status_command = "get_sync_status";
function get_sync_status(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_sync_status_command);
    });
}
exports.get_sync_status = get_sync_status;
exports.get_height_info_command = "get_height_info";
function get_height_info(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_height_info_command);
    });
}
exports.get_height_info = get_height_info;
exports.push_tx_command = "push_tx";
function push_tx(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.push_tx_command, data);
    });
}
exports.push_tx = push_tx;
exports.push_transactions_command = "push_transactions";
function push_transactions(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.push_transactions_command, data);
    });
}
exports.push_transactions = push_transactions;
exports.farm_block_command = "farm_block";
function farm_block(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.farm_block_command, data);
    });
}
exports.farm_block = farm_block;
exports.get_initial_freeze_period_command_of_wallet = "get_initial_freeze_period";
function get_initial_freeze_period_of_wallet(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_initial_freeze_period_command_of_wallet);
    });
}
exports.get_initial_freeze_period_of_wallet = get_initial_freeze_period_of_wallet;
exports.get_network_info_command_of_wallet = "get_network_info";
function get_network_info_of_wallet(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_network_info_command_of_wallet);
    });
}
exports.get_network_info_of_wallet = get_network_info_of_wallet;
// # Wallet management
exports.get_wallets_command = "get_wallets";
function get_wallets(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_wallets_command, data);
    });
}
exports.get_wallets = get_wallets;
exports.create_new_wallet_command = "create_new_wallet";
function create_new_wallet(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.create_new_wallet_command, data);
    });
}
exports.create_new_wallet = create_new_wallet;
// # Wallet
exports.get_wallet_balance_command = "get_wallet_balance";
function get_wallet_balance(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_wallet_balance_command, data);
    });
}
exports.get_wallet_balance = get_wallet_balance;
exports.get_transaction_command = "get_transaction";
function get_transaction(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_transaction_command, data);
    });
}
exports.get_transaction = get_transaction;
exports.get_transactions_command = "get_transactions";
function get_transactions(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_transactions_command, data);
    });
}
exports.get_transactions = get_transactions;
exports.get_next_address_command = "get_next_address";
function get_next_address(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_next_address_command, data);
    });
}
exports.get_next_address = get_next_address;
exports.send_transaction_command = "send_transaction";
function send_transaction(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.send_transaction_command, data);
    });
}
exports.send_transaction = send_transaction;
exports.send_transaction_multi_command = "send_transaction_multi";
function send_transaction_multi(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.send_transaction_multi_command, data);
    });
}
exports.send_transaction_multi = send_transaction_multi;
exports.get_transaction_count_command = "get_transaction_count";
function get_transaction_count(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_transaction_count_command, data);
    });
}
exports.get_transaction_count = get_transaction_count;
exports.get_farmed_amount_command = "get_farmed_amount";
function get_farmed_amount(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_farmed_amount_command);
    });
}
exports.get_farmed_amount = get_farmed_amount;
exports.create_signed_transaction_command = "create_signed_transaction";
function create_signed_transaction(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.create_signed_transaction_command, data);
    });
}
exports.create_signed_transaction = create_signed_transaction;
exports.delete_unconfirmed_transactions_command = "delete_unconfirmed_transactions";
function delete_unconfirmed_transactions(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.delete_unconfirmed_transactions_command, data);
    });
}
exports.delete_unconfirmed_transactions = delete_unconfirmed_transactions;
exports.select_coins_command = "select_coins";
function select_coins(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.select_coins_command, data);
    });
}
exports.select_coins = select_coins;
exports.get_current_derivation_index_command = "get_current_derivation_index";
function get_current_derivation_index(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_current_derivation_index_command);
    });
}
exports.get_current_derivation_index = get_current_derivation_index;
exports.extend_derivation_index_command = "extend_derivation_index";
function extend_derivation_index(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.extend_derivation_index_command, data);
    });
}
exports.extend_derivation_index = extend_derivation_index;
exports.get_notifications_command = "get_notifications";
function get_notifications(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_notifications_command, data);
    });
}
exports.get_notifications = get_notifications;
exports.delete_notifications_command = "delete_notifications";
function delete_notifications(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.delete_notifications_command, data);
    });
}
exports.delete_notifications = delete_notifications;
exports.send_notification_command = "send_notification";
function send_notification(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.send_notification_command, data);
    });
}
exports.send_notification = send_notification;
exports.sign_message_by_address_command = "sign_message_by_address";
function sign_message_by_address(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.sign_message_by_address_command, data);
    });
}
exports.sign_message_by_address = sign_message_by_address;
exports.sign_message_by_id_command = "sign_message_by_id";
function sign_message_by_id(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.sign_message_by_id_command, data);
    });
}
exports.sign_message_by_id = sign_message_by_id;
// # CATs and Trading
exports.get_cat_list_command = "get_cat_list";
function get_cat_list(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_cat_list_command);
    });
}
exports.get_cat_list = get_cat_list;
exports.cat_set_name_command = "cat_set_name";
function cat_set_name(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cat_set_name_command, data);
    });
}
exports.cat_set_name = cat_set_name;
exports.cat_asset_id_to_name_command = "cat_asset_id_to_name";
function cat_asset_id_to_name(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cat_asset_id_to_name_command, data);
    });
}
exports.cat_asset_id_to_name = cat_asset_id_to_name;
exports.cat_get_name_command = "cat_get_name";
function cat_get_name(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cat_get_name_command, data);
    });
}
exports.cat_get_name = cat_get_name;
exports.get_stray_cats_command = "get_stray_cats";
function get_stray_cats(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_stray_cats_command);
    });
}
exports.get_stray_cats = get_stray_cats;
exports.cat_spend_command = "cat_spend";
function cat_spend(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cat_spend_command, data);
    });
}
exports.cat_spend = cat_spend;
exports.cat_get_asset_id_command = "cat_get_asset_id";
function cat_get_asset_id(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cat_get_asset_id_command, data);
    });
}
exports.cat_get_asset_id = cat_get_asset_id;
exports.create_offer_for_ids_command = "create_offer_for_ids";
function create_offer_for_ids(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.create_offer_for_ids_command, data);
    });
}
exports.create_offer_for_ids = create_offer_for_ids;
exports.get_offer_summary_command = "get_offer_summary";
function get_offer_summary(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_offer_summary_command, data);
    });
}
exports.get_offer_summary = get_offer_summary;
exports.check_offer_validity_command = "check_offer_validity";
function check_offer_validity(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.check_offer_validity_command, data);
    });
}
exports.check_offer_validity = check_offer_validity;
exports.take_offer_command = "take_offer";
function take_offer(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.take_offer_command, data);
    });
}
exports.take_offer = take_offer;
exports.get_offer_command = "get_offer";
function get_offer(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_offer_command, data);
    });
}
exports.get_offer = get_offer;
exports.get_all_offers_command = "get_all_offers";
function get_all_offers(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_all_offers_command, data);
    });
}
exports.get_all_offers = get_all_offers;
exports.get_offers_count_command = "get_offers_count";
function get_offers_count(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.get_offers_count_command);
    });
}
exports.get_offers_count = get_offers_count;
exports.cancel_offer_command = "cancel_offer";
function cancel_offer(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cancel_offer_command, data);
    });
}
exports.cancel_offer = cancel_offer;
exports.cancel_offers_command = "cancel_offers";
function cancel_offers(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.cancel_offers_command, data);
    });
}
exports.cancel_offers = cancel_offers;
// # DID Wallet
exports.did_set_wallet_name_command = "did_set_wallet_name";
function did_set_wallet_name(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_set_wallet_name_command, data);
    });
}
exports.did_set_wallet_name = did_set_wallet_name;
exports.did_get_wallet_name_command = "did_get_wallet_name";
function did_get_wallet_name(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_wallet_name_command, data);
    });
}
exports.did_get_wallet_name = did_get_wallet_name;
exports.did_update_recovery_ids_command = "did_update_recovery_ids";
function did_update_recovery_ids(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_update_recovery_ids_command, data);
    });
}
exports.did_update_recovery_ids = did_update_recovery_ids;
exports.did_update_metadata_command = "did_update_metadata";
function did_update_metadata(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_update_metadata_command, data);
    });
}
exports.did_update_metadata = did_update_metadata;
exports.did_spend_command = "did_spend";
function did_spend(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        console.warn("did_spend was deprecated at chia-blockchain@1.2.8.");
        return agent.sendMessage(exports.chia_wallet_service, exports.did_spend_command, data);
    });
}
exports.did_spend = did_spend;
exports.did_get_pubkey_command = "did_get_pubkey";
function did_get_pubkey(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_pubkey_command);
    });
}
exports.did_get_pubkey = did_get_pubkey;
exports.did_get_did_command = "did_get_did";
function did_get_did(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_did_command, data);
    });
}
exports.did_get_did = did_get_did;
exports.did_recovery_spend_command = "did_recovery_spend";
function did_recovery_spend(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_recovery_spend_command, data);
    });
}
exports.did_recovery_spend = did_recovery_spend;
exports.did_get_recovery_list_command = "did_get_recovery_list";
function did_get_recovery_list(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_recovery_list_command, data);
    });
}
exports.did_get_recovery_list = did_get_recovery_list;
exports.did_get_metadata_command = "did_get_metadata";
function did_get_metadata(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_metadata_command, data);
    });
}
exports.did_get_metadata = did_get_metadata;
exports.did_create_attest_command = "did_create_attest";
function did_create_attest(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_create_attest_command, data);
    });
}
exports.did_create_attest = did_create_attest;
exports.did_get_information_needed_for_recovery_command = "did_get_information_needed_for_recovery";
function did_get_information_needed_for_recovery(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_information_needed_for_recovery_command, data);
    });
}
exports.did_get_information_needed_for_recovery = did_get_information_needed_for_recovery;
exports.did_get_current_coin_info_command = "did_get_current_coin_info";
function did_get_current_coin_info(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_get_current_coin_info_command, data);
    });
}
exports.did_get_current_coin_info = did_get_current_coin_info;
exports.did_create_backup_file_command = "did_create_backup_file";
function did_create_backup_file(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_create_backup_file_command, data);
    });
}
exports.did_create_backup_file = did_create_backup_file;
exports.did_transfer_did_command = "did_transfer_did";
function did_transfer_did(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.did_transfer_did_command, data);
    });
}
exports.did_transfer_did = did_transfer_did;
// # NFT Wallet
exports.nft_mint_nft_command = "nft_mint_nft";
function nft_mint_nft(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_mint_nft_command, data);
    });
}
exports.nft_mint_nft = nft_mint_nft;
exports.nft_get_nfts_command = "nft_get_nfts";
function nft_get_nfts(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_get_nfts_command, data);
    });
}
exports.nft_get_nfts = nft_get_nfts;
exports.nft_set_nft_did_command = "nft_set_nft_did";
function nft_set_nft_did(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_set_nft_did_command, data);
    });
}
exports.nft_set_nft_did = nft_set_nft_did;
exports.nft_get_by_did_command = "nft_get_by_did";
function nft_get_by_did(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_get_by_did_command, data);
    });
}
exports.nft_get_by_did = nft_get_by_did;
exports.nft_get_wallet_did_command = "nft_get_wallet_did";
function nft_get_wallet_did(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_get_wallet_did_command, data);
    });
}
exports.nft_get_wallet_did = nft_get_wallet_did;
exports.nft_get_wallets_with_dids_command = "nft_get_wallets_with_dids";
function nft_get_wallets_with_dids(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_get_wallets_with_dids_command);
    });
}
exports.nft_get_wallets_with_dids = nft_get_wallets_with_dids;
exports.nft_set_nft_status_command = "nft_set_nft_status";
function nft_set_nft_status(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_set_nft_status_command, data);
    });
}
exports.nft_set_nft_status = nft_set_nft_status;
exports.nft_transfer_nft_command = "nft_transfer_nft";
function nft_transfer_nft(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_transfer_nft_command, data);
    });
}
exports.nft_transfer_nft = nft_transfer_nft;
exports.nft_get_info_command = "nft_get_info";
function nft_get_info(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_get_info_command, data);
    });
}
exports.nft_get_info = nft_get_info;
exports.nft_add_uri_command = "nft_add_uri";
function nft_add_uri(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_add_uri_command, data);
    });
}
exports.nft_add_uri = nft_add_uri;
exports.nft_calculate_royalties_command = "nft_calculate_royalties";
function nft_calculate_royalties(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_calculate_royalties_command, data);
    });
}
exports.nft_calculate_royalties = nft_calculate_royalties;
exports.nft_mint_bulk_command = "nft_mint_bulk";
function nft_mint_bulk(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.nft_mint_bulk_command, data);
    });
}
exports.nft_mint_bulk = nft_mint_bulk;
// # RL wallet
exports.rl_set_user_info_command = "rl_set_user_info";
function rl_set_user_info(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.rl_set_user_info_command, data);
    });
}
exports.rl_set_user_info = rl_set_user_info;
exports.send_clawback_transaction_command = "send_clawback_transaction:";
function send_clawback_transaction(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.send_clawback_transaction_command, data);
    });
}
exports.send_clawback_transaction = send_clawback_transaction;
exports.add_rate_limited_funds_command = "add_rate_limited_funds:";
function add_rate_limited_funds(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.add_rate_limited_funds_command, data);
    });
}
exports.add_rate_limited_funds = add_rate_limited_funds;
exports.pw_join_pool_command = "pw_join_pool";
function pw_join_pool(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.pw_join_pool_command, data);
    });
}
exports.pw_join_pool = pw_join_pool;
exports.pw_self_pool_command = "pw_self_pool";
function pw_self_pool(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.pw_self_pool_command, data);
    });
}
exports.pw_self_pool = pw_self_pool;
exports.pw_absorb_rewards_command = "pw_absorb_rewards";
function pw_absorb_rewards(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.pw_absorb_rewards_command, data);
    });
}
exports.pw_absorb_rewards = pw_absorb_rewards;
exports.pw_status_command = "pw_status";
function pw_status(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.pw_status_command, data);
    });
}
exports.pw_status = pw_status;
exports.create_new_dl_command = "create_new_dl";
function create_new_dl(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.create_new_dl_command, data);
    });
}
exports.create_new_dl = create_new_dl;
exports.dl_track_new_command = "dl_track_new";
function dl_track_new(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_track_new_command, data);
    });
}
exports.dl_track_new = dl_track_new;
exports.dl_stop_tracking_command = "dl_stop_tracking";
function dl_stop_tracking(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_stop_tracking_command, data);
    });
}
exports.dl_stop_tracking = dl_stop_tracking;
exports.dl_latest_singleton_command = "dl_latest_singleton";
function dl_latest_singleton(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_latest_singleton_command, data);
    });
}
exports.dl_latest_singleton = dl_latest_singleton;
exports.dl_singletons_by_root_command = "dl_singletons_by_root";
function dl_singletons_by_root(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_singletons_by_root_command, data);
    });
}
exports.dl_singletons_by_root = dl_singletons_by_root;
exports.dl_update_root_command = "dl_update_root";
function dl_update_root(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_update_root_command, data);
    });
}
exports.dl_update_root = dl_update_root;
exports.dl_update_multiple_command = "dl_update_multiple";
function dl_update_multiple(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_update_multiple_command, data);
    });
}
exports.dl_update_multiple = dl_update_multiple;
exports.dl_history_command = "dl_history";
function dl_history(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_history_command, data);
    });
}
exports.dl_history = dl_history;
exports.dl_owned_singletons_command = "dl_owned_singletons";
function dl_owned_singletons(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_owned_singletons_command);
    });
}
exports.dl_owned_singletons = dl_owned_singletons;
exports.dl_get_mirrors_command = "dl_get_mirrors";
function dl_get_mirrors(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_get_mirrors_command, data);
    });
}
exports.dl_get_mirrors = dl_get_mirrors;
exports.dl_new_mirror_command = "dl_new_mirror";
function dl_new_mirror(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_new_mirror_command, data);
    });
}
exports.dl_new_mirror = dl_new_mirror;
exports.dl_delete_mirror_command = "dl_delete_mirror";
function dl_delete_mirror(agent, data) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_wallet_service, exports.dl_delete_mirror_command, data);
    });
}
exports.dl_delete_mirror = dl_delete_mirror;
