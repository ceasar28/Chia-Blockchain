"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.get_ips_after_timestamp = exports.get_ips_after_timestamp_command = exports.get_peer_counts = exports.get_peer_counts_command = exports.chia_crawler_service = void 0;
exports.chia_crawler_service = "chia_crawler";
exports.get_peer_counts_command = "get_peer_counts";
function get_peer_counts(agent) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_crawler_service, exports.get_peer_counts_command);
    });
}
exports.get_peer_counts = get_peer_counts;
exports.get_ips_after_timestamp_command = "get_ips_after_timestamp";
function get_ips_after_timestamp(agent, params) {
    return __awaiter(this, void 0, void 0, function* () {
        return agent.sendMessage(exports.chia_crawler_service, exports.get_ips_after_timestamp_command, params);
    });
}
exports.get_ips_after_timestamp = get_ips_after_timestamp;
