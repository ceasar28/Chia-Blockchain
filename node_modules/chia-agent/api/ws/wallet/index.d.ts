import { TDaemon } from "../../../daemon/index";
import { GetMessageType, TConnectionGeneral } from "../../types";
import { uint32 } from "../../chia/types/_python_types_";
import { TransactionRecord } from "../../chia/wallet/transaction_record";
export declare const chia_wallet_service = "chia_wallet";
export declare type chia_wallet_service = typeof chia_wallet_service;
export declare const get_connections_command = "get_connections";
export declare type get_connections_command = typeof get_connections_command;
export declare type TGetConnectionsBroadCast = {
    connections: TConnectionGeneral[];
};
export declare function on_get_connections(daemon: TDaemon, callback: (e: GetMessageType<chia_wallet_service, get_connections_command, TGetConnectionsBroadCast>) => unknown): Promise<() => void>;
export declare const state_changed_command_of_wallet = "state_changed";
export declare type state_changed_command_of_wallet = typeof state_changed_command_of_wallet;
export declare type TStateChangedBroadCastOfWallet = {
    state: "add_connection" | "new_block" | "wallet_created" | "added_stray_cat" | "offer_added" | "offer_cancelled";
} | {
    state: "coin_removed" | "coin_added" | "pending_transaction" | "did_coin_added" | "nft_coin_added" | "nft_coin_removed" | "nft_coin_updated" | "nft_coin_did_set";
    wallet_id: uint32;
} | {
    state: "tx_update";
    wallet_id: uint32;
    additional_data: {
        transaction: TransactionRecord;
    };
} | {
    state: "new_derivation_index";
    additional_data: {
        index: uint32;
    };
};
export declare function on_state_changed_of_wallet(daemon: TDaemon, callback: (e: GetMessageType<chia_wallet_service, state_changed_command_of_wallet, TStateChangedBroadCastOfWallet>) => unknown): Promise<() => void>;
export declare const sync_changed_command_of_wallet = "sync_changed";
export declare type sync_changed_command_of_wallet = typeof sync_changed_command_of_wallet;
export declare type TSyncChangedBroadCastOfWallet = {};
export declare function on_sync_changed_of_wallet(daemon: TDaemon, callback: (e: GetMessageType<chia_wallet_service, sync_changed_command_of_wallet, TSyncChangedBroadCastOfWallet>) => unknown): Promise<() => void>;
export declare const coin_added_command_of_wallet = "coin_added";
export declare type coin_added_command_of_wallet = typeof coin_added_command_of_wallet;
export declare type TCoinAddedBroadCastOfWallet = {
    state: "coin_added";
    wallet_id: uint32;
};
export declare function on_coin_added_of_wallet(daemon: TDaemon, callback: (e: GetMessageType<chia_wallet_service, coin_added_command_of_wallet, TCoinAddedBroadCastOfWallet>) => unknown): Promise<() => void>;
export declare type chia_wallet_commands = get_connections_command | sync_changed_command_of_wallet | state_changed_command_of_wallet | coin_added_command_of_wallet;
export declare type TChiaWalletBroadcast = TGetConnectionsBroadCast | TSyncChangedBroadCastOfWallet | TStateChangedBroadCastOfWallet | TCoinAddedBroadCastOfWallet;
export declare function on_message_from_wallet(daemon: TDaemon, callback: (e: GetMessageType<chia_wallet_service, chia_wallet_commands, TChiaWalletBroadcast>) => unknown): Promise<() => void>;
