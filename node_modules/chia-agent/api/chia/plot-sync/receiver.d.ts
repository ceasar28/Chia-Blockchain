import { bytes32 } from "../types/blockchain_format/sized_bytes";
import { bool, float, int, None, Optional, str, uint32 } from "../types/_python_types_";
import { Plot } from "../protocols/harvester_protocol";
export declare type MayBeSummary<S, O> = S extends true ? int : O;
export declare type Receiver<SUMMARY extends boolean = false> = {
    connection: {
        node_id: bytes32;
        host: str;
        port: int;
    };
    plots: MayBeSummary<SUMMARY, Plot[]>;
    failed_to_open_filenames: MayBeSummary<SUMMARY, str[]>;
    no_key_filenames: MayBeSummary<SUMMARY, str[]>;
    duplicates: MayBeSummary<SUMMARY, str[]>;
    total_plot_size: int;
    syncing: {
        initial: bool;
        plot_files_processed: uint32;
        plot_files_total: uint32;
    } | None;
    last_sync_time: Optional<float>;
};
