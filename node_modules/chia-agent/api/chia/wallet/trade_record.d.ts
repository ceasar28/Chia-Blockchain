import { bool, bytes, int, Optional, str, uint32, uint64, uint8 } from "../types/_python_types_";
import { Coin } from "../types/blockchain_format/coin";
import { bytes32 } from "../types/blockchain_format/sized_bytes";
import { TDriverDict } from "./puzzle_drivers";
export declare type TradeRecord = {
    confirmed_at_index: uint32;
    accepted_at_time: Optional<uint64>;
    created_at_time: uint64;
    is_my_offer: bool;
    sent: uint32;
    offer: bytes;
    taken_offer: Optional<bytes>;
    coins_of_interest: Coin[];
    trade_id: bytes32;
    status: uint32;
    sent_to: Array<[str, uint8, Optional<str>]>;
};
export declare type TradeRecordConvenience = {
    summary: {
        offered: Record<str, int>;
        requested: Record<str, int>;
        infos: TDriverDict;
        fees: int;
    };
    pending: Record<str, int>;
} & Omit<TradeRecord, "offer">;
